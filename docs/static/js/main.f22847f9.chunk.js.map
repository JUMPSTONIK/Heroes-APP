{"version":3,"sources":["components/Card.tsx","components/ListHeroesSection.tsx","helpers/getHeroes.ts","components/EmptySection.tsx","components/LowerSection.tsx","components/CardLoader.tsx","components/HeroesPage.tsx","index.tsx"],"names":["Card","props","backgroundtext","backgroundImage","hero","image","listOfIds","localStorage","getItem","JSON","parse","className","length","id","style","src","alt","type","onClick","hadleFavorite","includes","name","realName","powerStat","protoTypes","PropTypes","string","isRequired","number","ListHeroesSection","useState","height","width","dimensions","setDimensions","listofCard","useMemo","listOfDataCards","map","superHero","handleFavorite","toString","reactWindowContainerRef","useRef","useEffect","current","offsetHeight","offsetWidth","cols","Math","trunc","rows","handleResize","window","addEventListener","removeEventListener","ref","columnCount","columnWidth","Infinity","innerHeight","rowCount","rowHeight","columnIndex","rowIndex","getHeroes","a","listOfHeroes","fetch","response","json","forEach","element","powerstats","calcPower","combat","durability","intelligence","power","speed","strength","biography","fullName","images","md","parseFloat","toFixed","push","console","log","EmptySection","LowerSection","ListofCard","favoriteHeroeslist","CardLoader","section","CardCount","innerWidth","backgroundColor","foregroundColor","x","y","rx","ry","Array","fill","_","i","HeroesPage","setListOfHeroes","idsList","setIdsList","searchedHero","setSearchedHero","collapse","setCollapse","areHeroesLoaded","setAreHeroesLoaded","then","elem","newIdsList","filter","setItem","stringify","generalHeroesList","sort","heroA","heroB","indexOf","searchHeroesList","placeholder","onChange","event","target","value","divRoot","document","querySelector","ReactDOM","render"],"mappings":"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","file":"static/js/main.f22847f9.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\nimport CSS from \"csstype\";\nimport { HeroCardData } from \"../helpers/getHeroes\";\n\ninterface CardProps {\n  hero: HeroCardData;\n  hadleFavorite(hero: HeroCardData): void;\n}\n\nconst Card = (props: CardProps) => {\n  const backgroundtext: CSS.Properties = {\n    backgroundImage: `url(${props.hero.image})`,\n  };\n\n  const listOfIds = localStorage.getItem(\"ids\")\n    ? JSON.parse(localStorage.getItem(\"ids\")!)\n    : [];\n\n  return (\n    <>\n      <div\n        className={` card-container ${\n          listOfIds[listOfIds.length - 1] === props.hero.id\n            ? \"liked-recently\"\n            : \"\"\n        }`}\n      >\n        <div className=\"card-background\">\n          <div className=\"background-image\" style={backgroundtext}></div>\n          <div className=\"card\">\n            <div className=\"heroesPicture\">\n              <img className=\"hero\" src={props.hero.image} alt=\"\" />\n              <div className=\"backgroundFavoriteButton\"></div>\n              <button\n                className=\"favorite-button\"\n                type=\"submit\"\n                onClick={() => props.hadleFavorite(props.hero)}\n              >\n                <img\n                  className={\n                    listOfIds.includes(props.hero.id)\n                      ? \"mediumHeart-filled\"\n                      : \"mediumHeart\"\n                  }\n                  src={\n                    listOfIds.includes(props.hero.id)\n                      ? \"./assets/medium-filled-heart/medium-filled-heart.svg\"\n                      : \"./assets/small-heart/small-heart.svg\"\n                  }\n                  alt=\"little heart\"\n                />\n              </button>\n            </div>\n            <div className=\"heroesContent\">\n              <div className=\"heroes-nickname\">{props.hero.name}</div>\n\n              <div className=\"realName\">Real Name: {props.hero.realName}</div>\n              <div className=\"rank-space\">\n                <img\n                  className=\"fist\"\n                  src=\"./assets/fist/fist.svg\"\n                  alt=\"fist of ranking\"\n                />\n                <div className=\"rank\">\n                  <strong>{props.hero.powerStat}</strong> / 10\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nCard.protoTypes = {\n  name: PropTypes.string.isRequired,\n  realName: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  powerStat: PropTypes.number.isRequired,\n};\n\nexport default Card;\n//  Dispatch<SetStateAction<string[]>>\n","import { CSSProperties, useEffect, useMemo, useRef, useState } from \"react\";\nimport { HeroCardData } from \"../helpers/getHeroes\";\nimport { FixedSizeGrid as Grid } from \"react-window\";\nimport Card from \"./Card\";\n\ninterface ListHeroesSectionProps {\n  listOfDataCards: HeroCardData[];\n  handleFavorite(hero: HeroCardData): void;\n}\n\ninterface properties {\n  columnIndex: number;\n  rowIndex: number;\n  style: CSSProperties;\n}\nconst ListHeroesSection = (props: ListHeroesSectionProps) => {\n  const [dimensions, setDimensions] = useState({\n    height: 0,\n    width: 0,\n  });\n\n  const listofCard = useMemo(\n    () =>\n      props.listOfDataCards.map((superHero) => (\n        <Card\n          key={superHero.id.toString()}\n          hero={superHero}\n          hadleFavorite={props.handleFavorite}\n        />\n      )),\n    [props]\n  );\n\n  const reactWindowContainerRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    setDimensions({\n      height: reactWindowContainerRef.current?.offsetHeight!,\n      width: reactWindowContainerRef.current?.offsetWidth!,\n    });\n  }, []);\n\n  const cols = useMemo(\n    () => Math.trunc((dimensions.width - 22) / 336),\n    [dimensions.width]\n  );\n  // console.log(cols);\n  const rows = useMemo(\n    () =>\n      dimensions.width === 0\n        ? 0\n        : Math.trunc(listofCard.length / Math.trunc(dimensions.width / 336)),\n    [dimensions.width, listofCard.length]\n  );\n\n  // console.log(rows);\n\n  useEffect(() => {\n    const handleResize = () => {\n      setDimensions({\n        height: reactWindowContainerRef.current?.offsetHeight!,\n        width: reactWindowContainerRef.current?.offsetWidth!,\n      });\n    };\n    window.addEventListener(\"resize\", handleResize);\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n\n  const Cell = ({ columnIndex, rowIndex, style }: properties) => (\n    <div\n      style={{\n        ...style,\n        width: `${Math.trunc(\n          dimensions.width * (dimensions.width / (336 * cols))\n        )}`,\n      }}\n    >\n      {listofCard[rowIndex * cols + columnIndex]}\n    </div>\n  );\n\n  return (\n    <>\n      <div ref={reactWindowContainerRef} className=\"list-heroes-section\">\n        <Grid\n          className=\"grid-conteiner animate__fadeIn\"\n          columnCount={cols > 0 ? cols : 1}\n          columnWidth={336}\n          height={\n            Math.trunc(dimensions.height) !== Infinity\n              ? Math.trunc(dimensions.height)\n              : window.innerHeight\n          }\n          rowCount={rows > 0 ? rows + 1 : listofCard.length}\n          rowHeight={222}\n          width={Math.trunc(\n            dimensions.width * (dimensions.width / (336 * (cols - 3)))\n          )}\n          style={{ width: \"\" }}\n        >\n          {Cell}\n        </Grid>\n      </div>\n    </>\n  );\n};\n\nexport default ListHeroesSection;\n","export interface HeroCardData {\n  id: number;\n  name: string;\n  realName: string;\n  image: string;\n  powerStat: number;\n}\n\ninterface SuperHero {\n  id: number;\n  name: string;\n  powerstats: {\n    intelligence: number;\n    combat: number;\n    durability: number;\n    power: number;\n    speed: number;\n    strength: number;\n  };\n  biography: {\n    fullName: string;\n  };\n  images: {\n    md: string;\n  };\n}\n\nexport const getHeroes = async () => {\n  let listOfHeroes: HeroCardData[] = [];\n\n  try {\n    const apiKey = \"akabab.github.io/superhero-api/api/all.json \";\n    const response = await fetch(\n      `https://cors-anywhere.herokuapp.com/${apiKey}`\n    );\n\n    // response.then((resp) => {\n\n    const data = await response.json();\n\n    // console.log(data);\n\n    data.forEach((element: SuperHero) => {\n      const { combat, durability, intelligence, power, speed, strength } =\n        element.powerstats;\n      const calcPower: number =\n        (combat + durability + intelligence + power + speed + strength) / 60;\n      // console.log(element.biography.fullname)\n      const hero: HeroCardData = {\n        id: element.id,\n        name: element.name,\n        realName: element.biography.fullName,\n        image: element.images.md,\n        powerStat: parseFloat(calcPower.toFixed(2)),\n      };\n\n      listOfHeroes.push(hero);\n    });\n    // });\n    // });\n  } catch (error) {\n    // manejo del error\n    console.log(error);\n  }\n\n  return listOfHeroes;\n};\n","import React from \"react\";\n\nexport const EmptySection = () => {\n  return (\n    <>\n      <img\n        className=\"big-heart\"\n        src=\"./assets/big-heart/big-heart.svg\"\n        alt=\"big heart\"\n      />\n      <p className=\"favorite-text\">You haven't liked any superhero yet</p>\n    </>\n  );\n};\n","// import React, { useState } from \"react\";\n// import PropTypes from \"prop-types\";\nimport { HeroCardData } from \"../helpers/getHeroes\";\nimport Card from \"./Card\";\nimport { EmptySection } from \"./EmptySection\";\n// interface CounterAppProps {\n//   value: number;\n// }\n\ninterface LowerSectioProps {\n  favoriteHeroeslist: HeroCardData[];\n  handleFavorite(hero: HeroCardData): void;\n}\n\nconst LowerSection = (props: LowerSectioProps) => {\n  const ListofCard = props.favoriteHeroeslist.map((superHero) => (\n    // Correcto! La key debería ser especificada dentro del array.\n    <Card\n      key={superHero.id.toString()}\n      hero={superHero}\n      hadleFavorite={props.handleFavorite}\n    />\n  ));\n\n  return (\n    <>\n      <div\n        className={\n          ListofCard.length === 0 ? \"lower-section\" : \"favorite-heroes-section\"\n        }\n      >\n        {ListofCard.length === 0 ? <EmptySection /> : ListofCard}\n      </div>\n    </>\n  );\n};\n\n// CounterApp.propTypes = {\n//   value: PropTypes.number,\n// };\n\nexport default LowerSection;\n","import ContentLoader from \"react-content-loader\";\n\ninterface sectionprop {\n  section: string;\n}\n\nexport const CardLoader = (section: sectionprop) => {\n  // console.log(section);\n  const CardCount = Math.trunc((window.innerWidth * 0.9) / 317);\n  console.log(CardCount);\n\n  return (\n    <ContentLoader\n      height={section.section !== \"general\" ? 400 : 550}\n      speed={2}\n      backgroundColor=\"#6A4DBC\"\n      foregroundColor=\"#ecebeb\"\n      style={{ width: \"100%\" }}\n    >\n      <rect x=\"16\" y=\"60\" rx=\"5\" ry=\"5\" width=\"200\" height=\"42\" />\n      {new Array(CardCount).fill(\" \").map((_, i) => {\n        return (\n          <rect\n            key={i}\n            x={`${333 * i + 70}`}\n            y=\"130\"\n            rx=\"5\"\n            ry=\"5\"\n            width=\"317\"\n            height=\"174\"\n          />\n        );\n      })}\n\n      {section.section === \"general\" &&\n        new Array(CardCount).fill(\" \").map((_, i) => {\n          return (\n            <rect\n              key={i}\n              x={`${333 * i + 70}`}\n              y=\"320\"\n              rx=\"5\"\n              ry=\"5\"\n              width=\"317\"\n              height=\"174\"\n            />\n          );\n        })}\n    </ContentLoader>\n  );\n};\n","import { useEffect, useMemo, useRef, useState } from \"react\";\nimport ListHeroesSection from \"./ListHeroesSection\";\nimport { getHeroes, HeroCardData } from \"../helpers/getHeroes\";\nimport LowerSection from \"./LowerSection\";\nimport { CardLoader } from \"./CardLoader\";\nimport Card from \"./Card\";\n\ninterface GeneralAndFavoriteList {\n  generalHeroesList: HeroCardData[];\n  favoriteHeroeslist: HeroCardData[];\n}\n\nconst HeroesPage = () => {\n  const [listOfHeroes, setListOfHeroes] = useState<HeroCardData[]>([]);\n  const [idsList, setIdsList] = useState<number[]>([]);\n  const [searchedHero, setSearchedHero] = useState(\"\");\n  const [collapse, setCollapse] = useState(true);\n  const [areHeroesLoaded, setAreHeroesLoaded] = useState(false);\n\n  useEffect(() => {\n    // setTimeout(() => {\n    getHeroes().then((elem) => {\n      const listOfIds = localStorage.getItem(\"ids\")\n        ? JSON.parse(localStorage.getItem(\"ids\")!)\n        : [];\n\n      setIdsList(listOfIds);\n      setListOfHeroes(elem);\n      setAreHeroesLoaded(true);\n    });\n    // }, 3000);\n  }, []);\n\n  const handleFavorite = (hero: HeroCardData) => {\n    if (!idsList.includes(hero.id)) {\n      const listOfIds = localStorage.getItem(\"ids\")\n        ? JSON.parse(localStorage.getItem(\"ids\")!)\n        : [];\n\n      listOfIds.push(hero.id);\n      localStorage.setItem(\"ids\", JSON.stringify(listOfIds));\n      setIdsList(listOfIds);\n    } else {\n      const listOfIds = localStorage.getItem(\"ids\")\n        ? JSON.parse(localStorage.getItem(\"ids\")!)\n        : [];\n\n      const newIdsList = listOfIds.filter((id: number) => {\n        return id !== hero.id;\n      });\n\n      setIdsList(newIdsList);\n      localStorage.setItem(\"ids\", JSON.stringify(newIdsList));\n    }\n  };\n\n  const handleCollapseButton = () => {\n    setCollapse(!collapse);\n  };\n\n  const { generalHeroesList, favoriteHeroeslist }: GeneralAndFavoriteList =\n    useMemo(() => {\n      let generalHeroesList: HeroCardData[] = [];\n      let favoriteHeroeslist: HeroCardData[] = [];\n\n      listOfHeroes.forEach((elem) => {\n        if (!idsList.includes(elem.id)) {\n          generalHeroesList.push(elem);\n        } else {\n          favoriteHeroeslist.push(elem);\n        }\n      });\n      return {\n        generalHeroesList,\n        favoriteHeroeslist: favoriteHeroeslist.sort(\n          (heroA, heroB) =>\n            idsList.indexOf(heroB.id) - idsList.indexOf(heroA.id)\n        ),\n      };\n    }, [idsList, listOfHeroes]);\n\n  const searchHeroesList = useMemo(\n    () =>\n      generalHeroesList.filter((hero) => {\n        return (\n          (hero.name.includes(searchedHero) ||\n            hero.realName.includes(searchedHero)) &&\n          !idsList.includes(hero.id)\n        );\n      }),\n    [generalHeroesList, idsList, searchedHero]\n  );\n  // añadir animaciones como el discord a la tarjetas y busqueda.\n  // añadir al repo lo realizado.\n  return (\n    <>\n      <div className=\"content\">\n        <div className=\"logo-section\">\n          <img className=\"logo\" src=\"./assets/logo/logo.svg\" alt=\"\" />\n        </div>\n        <div\n          className={\n            !areHeroesLoaded\n              ? \"display-loader-section\"\n              : \"display-favorites-section\"\n          }\n        >\n          {areHeroesLoaded ? (\n            <>\n              <div className=\"upper-section\">\n                <div className=\"liked-space\">\n                  <div className=\"little-favorite-button\">\n                    <img\n                      className=\"littleHeart\"\n                      src=\"./assets/small-heart/small-heart.svg\"\n                      alt=\"little heart\"\n                    />\n                  </div>\n                  <p className=\"liked-text\">Liked</p>\n                </div>\n                <button\n                  className={\n                    collapse ? \"display-button\" : \"display-button-rotated\"\n                  }\n                  onClick={handleCollapseButton}\n                >\n                  <img src=\"./assets/arrow-up/arrow-up.svg\" alt=\"arrow up\" />\n                </button>\n              </div>\n              {collapse && (\n                <LowerSection\n                  favoriteHeroeslist={favoriteHeroeslist}\n                  handleFavorite={handleFavorite}\n                />\n              )}\n            </>\n          ) : (\n            <CardLoader section={\"\"} />\n          )}\n        </div>\n        <div className=\"search-and-general-section\">\n          {areHeroesLoaded ? (\n            <>\n              <div className=\"search-heroes-section\">\n                <p className=\"search-title\">All superheroes</p>\n                <div className=\"search-bar-element\">\n                  <img src=\"./assets/search/search.svg\" alt=\"\" />\n                  <input\n                    className=\"search-input\"\n                    type=\"text\"\n                    placeholder=\"Search\"\n                    onChange={(event) => setSearchedHero(event.target.value)}\n                  />\n                </div>\n              </div>\n              <ListHeroesSection\n                listOfDataCards={searchHeroesList}\n                handleFavorite={handleFavorite}\n              />\n            </>\n          ) : (\n            <CardLoader section={\"general\"} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default HeroesPage;\nfunction useCallback(\n  arg0: () => {\n    generalHeroesList: HeroCardData[];\n    favoriteHeroeslist: HeroCardData[];\n  },\n  arg1: (HeroCardData[] | number[])[]\n): GeneralAndFavoriteList {\n  throw new Error(\"Function not implemented.\");\n}\n","// import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport HeroesPage from \"./components/HeroesPage\";\n\nconst divRoot = document.querySelector(\"#root\");\n// insertar aqui el componente principal\nReactDOM.render(<HeroesPage />, divRoot);\n"],"sourceRoot":""}